generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products Product[] @relation(name: "ProductToCategory") // Reverse relation
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String? // Optional field
  price       Float
  inventory   Int
  categoryId  String
  category    Category    @relation(name: "ProductToCategory", fields: [categoryId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
}

model Order {
  id         String       @id @default(uuid())
  userId     String
  user       User         @relation(fields: [userId], references: [id])
  total      Float
  status     String       @default("PENDING")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  orderItems OrderItem[]
}


model OrderItem {
  id        String   @id @default(uuid())
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  unitPrice Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
